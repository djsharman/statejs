import IllegalStateTransitionError from "./IllegalStateTransitionError";

//>>>> don't change the CUSTOM CODE comments, if you do generation will overwrite your code >>>>
//###START_CUSTOMCODE1

//###END_CUSTOMCODE1
class Abstract<%= classname %>State {
//>>>> don't change the CUSTOM CODE comments, if you do generation will overwrite your code >>>>
//###START_CUSTOMCODE2

//###END_CUSTOMCODE2

    setParentStateMachine(SM) {
        this.SM = SM;
    }

    <% if (onEnterState) { %>
    onEnterState() {

    }
    <% } %>

    <% if (onExitState) { %>
    onExitState() {

    }
    <% } %>


    <% states.forEach(function(state) { %>
    <%= state %>() {
        throw new IllegalStateTransitionError();
    }
    <% } %>

}
export default AbstractDoorState;